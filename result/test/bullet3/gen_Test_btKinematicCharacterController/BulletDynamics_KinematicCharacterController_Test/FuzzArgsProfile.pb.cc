// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FuzzArgsProfile.proto

#include "FuzzArgsProfile.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace AutoFuzz {
class FuzzArgsProfileDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FuzzArgsProfile> _instance;
} _FuzzArgsProfile_default_instance_;
}  // namespace AutoFuzz
static void InitDefaultsscc_info_FuzzArgsProfile_FuzzArgsProfile_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::AutoFuzz::_FuzzArgsProfile_default_instance_;
    new (ptr) ::AutoFuzz::FuzzArgsProfile();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FuzzArgsProfile_FuzzArgsProfile_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_FuzzArgsProfile_FuzzArgsProfile_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_FuzzArgsProfile_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_FuzzArgsProfile_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_FuzzArgsProfile_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_FuzzArgsProfile_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::AutoFuzz::FuzzArgsProfile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::AutoFuzz::FuzzArgsProfile, fuzzvar2_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::AutoFuzz::FuzzArgsProfile)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::AutoFuzz::_FuzzArgsProfile_default_instance_),
};

const char descriptor_table_protodef_FuzzArgsProfile_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\025FuzzArgsProfile.proto\022\010AutoFuzz\"#\n\017Fuz"
  "zArgsProfile\022\020\n\010fuzzvar2\030\001 \001(\002b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_FuzzArgsProfile_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_FuzzArgsProfile_2eproto_sccs[1] = {
  &scc_info_FuzzArgsProfile_FuzzArgsProfile_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_FuzzArgsProfile_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_FuzzArgsProfile_2eproto = {
  false, false, descriptor_table_protodef_FuzzArgsProfile_2eproto, "FuzzArgsProfile.proto", 78,
  &descriptor_table_FuzzArgsProfile_2eproto_once, descriptor_table_FuzzArgsProfile_2eproto_sccs, descriptor_table_FuzzArgsProfile_2eproto_deps, 1, 0,
  schemas, file_default_instances, TableStruct_FuzzArgsProfile_2eproto::offsets,
  file_level_metadata_FuzzArgsProfile_2eproto, 1, file_level_enum_descriptors_FuzzArgsProfile_2eproto, file_level_service_descriptors_FuzzArgsProfile_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_FuzzArgsProfile_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_FuzzArgsProfile_2eproto)), true);
namespace AutoFuzz {

// ===================================================================

class FuzzArgsProfile::_Internal {
 public:
};

FuzzArgsProfile::FuzzArgsProfile(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:AutoFuzz.FuzzArgsProfile)
}
FuzzArgsProfile::FuzzArgsProfile(const FuzzArgsProfile& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  fuzzvar2_ = from.fuzzvar2_;
  // @@protoc_insertion_point(copy_constructor:AutoFuzz.FuzzArgsProfile)
}

void FuzzArgsProfile::SharedCtor() {
  fuzzvar2_ = 0;
}

FuzzArgsProfile::~FuzzArgsProfile() {
  // @@protoc_insertion_point(destructor:AutoFuzz.FuzzArgsProfile)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FuzzArgsProfile::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void FuzzArgsProfile::ArenaDtor(void* object) {
  FuzzArgsProfile* _this = reinterpret_cast< FuzzArgsProfile* >(object);
  (void)_this;
}
void FuzzArgsProfile::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FuzzArgsProfile::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FuzzArgsProfile& FuzzArgsProfile::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FuzzArgsProfile_FuzzArgsProfile_2eproto.base);
  return *internal_default_instance();
}


void FuzzArgsProfile::Clear() {
// @@protoc_insertion_point(message_clear_start:AutoFuzz.FuzzArgsProfile)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fuzzvar2_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FuzzArgsProfile::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // float fuzzvar2 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 13)) {
          fuzzvar2_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FuzzArgsProfile::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AutoFuzz.FuzzArgsProfile)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float fuzzvar2 = 1;
  if (!(this->fuzzvar2() <= 0 && this->fuzzvar2() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(1, this->_internal_fuzzvar2(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AutoFuzz.FuzzArgsProfile)
  return target;
}

size_t FuzzArgsProfile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AutoFuzz.FuzzArgsProfile)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float fuzzvar2 = 1;
  if (!(this->fuzzvar2() <= 0 && this->fuzzvar2() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FuzzArgsProfile::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AutoFuzz.FuzzArgsProfile)
  GOOGLE_DCHECK_NE(&from, this);
  const FuzzArgsProfile* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FuzzArgsProfile>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AutoFuzz.FuzzArgsProfile)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AutoFuzz.FuzzArgsProfile)
    MergeFrom(*source);
  }
}

void FuzzArgsProfile::MergeFrom(const FuzzArgsProfile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AutoFuzz.FuzzArgsProfile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.fuzzvar2() <= 0 && from.fuzzvar2() >= 0)) {
    _internal_set_fuzzvar2(from._internal_fuzzvar2());
  }
}

void FuzzArgsProfile::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AutoFuzz.FuzzArgsProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FuzzArgsProfile::CopyFrom(const FuzzArgsProfile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AutoFuzz.FuzzArgsProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FuzzArgsProfile::IsInitialized() const {
  return true;
}

void FuzzArgsProfile::InternalSwap(FuzzArgsProfile* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(fuzzvar2_, other->fuzzvar2_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FuzzArgsProfile::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace AutoFuzz
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::AutoFuzz::FuzzArgsProfile* Arena::CreateMaybeMessage< ::AutoFuzz::FuzzArgsProfile >(Arena* arena) {
  return Arena::CreateMessageInternal< ::AutoFuzz::FuzzArgsProfile >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
